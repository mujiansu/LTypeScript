#In JavaScript, functions and variables are hoisted. 
#Hoisting is JavaScript's behavior of moving declarations to the top of a scope (the global scope or the current function scope).

#That means that you are able to use a function or a variable before it has been declared, or in other words: a function or variable can be declared after it has been used already.

#Technical example

##Variables:

foo = 2
var foo;

// is implicitly understood as:

var foo;
foo = 2;

##Functions:

hoisted(); // logs "foo"

function hoisted() {
  console.log("foo");
}
